type Listing @entity {
  id: ID!
  canceled: Boolean
  groupable: Boolean
  hasSuppliers: Boolean
  winner: Bytes
  ltMax: BigInt
  creationTime: BigInt
  auctionTime: BigInt
  endTime: BigInt
  revealTime: BigInt
  minMerit: BigInt
  maxPrice: BigInt
  highestBid: BigInt
  address: Bytes
  uri: String
  quantityToFulfil: BigInt
  totalQuantity: BigInt
  fPBid: Int
  buyers: [Buyer!]!  @derivedFrom(field: "listing")
  suppliers: [Supplier!]! @derivedFrom(field: "listing")
  creator: Bytes!
  tokenID: BigInt
}

type Buyer @entity  {
  id: ID!
  weiAmount: BigInt!
  quantity: BigInt!
  canWithdraw: Boolean!
  isParticipating: Boolean!
  deliveryStartTime: BigInt
  inputKeyTTime: BigInt
  distributionLeadTime: BigInt
  transporterAddress: Bytes
  listing: Listing!
  user: User!
  token: Token @derivedFrom(field: "buyer")
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Supplier @entity {
  id: ID!
  weiAmount: BigInt!
  isParticipating: Boolean!
  revealed: Boolean!
  refunded: Boolean!
  invalidBid: Boolean!
  canWithdraw: Boolean!
  listing: Listing!
  user: User!
  bid: Bid!
  joinedBlock: BigInt!
}

type Bid @entity {
  id: ID!
  encryptedBid: Bytes!
  unencryptedBid: BigInt
  blockNumber: BigInt!
  transactionHash: Bytes!
  transactionLogIndex: BigInt!
  supplier: Supplier! @derivedFrom(field: "bid")
}

type User @entity{
  id: ID!
  role: String!
  active: Boolean!
  buying: [Buyer!] @derivedFrom(field: "user")
  supplying: [Supplier!] @derivedFrom(field: "user")
}

type Token @entity {
  id: ID!
  owner: Bytes!
  value: BigInt!
  buyer: Buyer
}